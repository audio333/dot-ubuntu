#!/bin/bash

watch() {
  url="$1"
  format="$2"
  title="$3"

  TS_SOCKET=/tmp/md tsp mpv --ytdl-format="bestvideo[height<=?${format}]+bestaudio/best" --quiet --geometry=-15-60 --autofit=854x480 --title=" YT - $title" "$url" >/dev/null 2>&1
}

dl() {
  url="$1"
  format="$2"

  case "$format" in
    m4a) format="139" ;;
    360) format="134+139" ;;
    480) format="135+139" ;; # default format
    720) format="136+139" ;;
    1080) format="137+139" ;;
  esac >/dev/null

  TS_SOCKET=/tmp/dl tsp yt-dlp -o "%(title)s - %(uploader)s.%(ext)s" --embed-metadata --restrict-filenames --format "$format" "$url"
}

log_history() {
  url=$1
  hist=$2
  title=$3

  if grep -q "$url" "$hist"; then
    echo "already watched - ${title}"
  else
    echo "${url}          # ${title}" >> "$hist" 
    echo "url saved - ${title}"
  fi
}

get_files_or_urls() {
dir="$HOME/video"
hist="$HOME/.local/share/saved/yt_history"
urls=() # array
format="480"
mode=""

while [ $# -gt 0 ]; do
  case $1 in
    -y) # ytfzf 
    for link in $(ytfzf -L | xargs); do 
      urls+=("$link")
    done
    ;;
    -d) # dir
    if [[ -z "$2" || "$2" == -* ]]; then
      echo "default dir: ${dir}"
    else
      [[ -d "$2" ]] && dir="$2"
    fi

    find $dir -mindepth 1 -printf '%P\n' | fzf -m --layout reverse | while read -r song; do
      TS_SOCKET=/tmp/md tsp mpv --quiet --geometry=-15-60 --autofit=854x480 --title=" Local - $(basename -- "$song")" "$dir/$song" >/dev/null 2>&1
    done
    ;;
    -f) # yt_history / file with list of urls
    if [[ -z "$2" || "$2" == -* ]]; then
      echo "default hist file: ${hist}"
    else
      [[ -f "$2" ]] && hist="$2"
    fi

    for link in $(grep -v '^#' "$hist" | fzf -m --layout reverse | cut -d' ' -f1); do 
      urls+=("$link")
    done
    ;;
    -u) # url
    [[ -z "$2" || "$2" == -* ]] && echo "Link not specified"

    urls+=("$2")
    ;;
    -F) # video format
    if [[ -z "$2" || "$2" == -* ]]; then
      echo "default format: ${format}"
    else
      format="$2"
    fi
    ;;
    -D) # change mode to dl
    mode="dl"
    ;;
  esac

  shift
done

# check if link is valid
regex='(https?|ftp|file)://[-[:alnum:]\+&@#/%?=~_|!:,.;]*[-[:alnum:]\+&@#/%=~_|]'

# watch, log or dl urls
for url in ${urls[@]}; do
  if [[ $url =~ $regex ]]; then
  
    # --simulate - Do not download the video and do not write anything to disk
    title="$(yt-dlp --simulate --print "%(title)s - %(channel)s" "$url")" 

    if [[ -z $mode ]]; then
      watch "$url" "$format" "$title"
      log_history "$url" "$hist" "$title"
    else
      dl "$url" "$format" 
    fi

  else
    echo "Invalid URL"
  fi
done
}

get_files_or_urls "$@"
